// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A travel destination recommendation AI agent.
 *
 * - getTravelRecommendations - A function that handles the travel destination recommendation process.
 * - TravelRecommendationsInput - The input type for the getTravelRecommendations function.
 * - TravelRecommendationsOutput - The return type for the getTravelRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TravelRecommendationsInputSchema = z.object({
  preferences: z
    .string()
    .describe('The user preferences for travel destinations, such as preferred activities, climate, and travel style.'),
  browsingHistory: z
    .string()
    .describe('The user browsing history on the travel website, including destinations viewed and packages explored.'),
});
export type TravelRecommendationsInput = z.infer<typeof TravelRecommendationsInputSchema>;

const TravelRecommendationsOutputSchema = z.object({
  destinations: z
    .array(z.string())
    .describe('A list of recommended travel destinations based on the user preferences and browsing history.'),
  reasons: z
    .array(z.string())
    .describe('A list of reasons why each destination is recommended, based on the user preferences and browsing history.'),
});
export type TravelRecommendationsOutput = z.infer<typeof TravelRecommendationsOutputSchema>;

export async function getTravelRecommendations(input: TravelRecommendationsInput): Promise<TravelRecommendationsOutput> {
  return aiTravelRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'aiTravelRecommendationsPrompt',
  input: {schema: TravelRecommendationsInputSchema},
  output: {schema: TravelRecommendationsOutputSchema},
  prompt: `You are an expert travel agent specializing in personalized travel recommendations.

You will use the user's preferences and browsing history to recommend travel destinations tailored to their interests.

Preferences: {{{preferences}}}
Browsing History: {{{browsingHistory}}}

Based on this information, recommend travel destinations and explain why each destination is a good fit for the user.

Format your output as a JSON object with a 'destinations' array and a corresponding 'reasons' array.
`,
});

const aiTravelRecommendationsFlow = ai.defineFlow(
  {
    name: 'aiTravelRecommendationsFlow',
    inputSchema: TravelRecommendationsInputSchema,
    outputSchema: TravelRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
